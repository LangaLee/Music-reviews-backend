{
  "GET /api/docs": "returns the documentation of the endpoints for the api",
  "GET /api/users": {
    "description": "returns an object with all the available users",
    "exampleResponse": {
      "users": [
        {
          "created_at": "Date",
          "profile_pic_url": "string",
          "username": "string"
        }
      ]
    }
  },
  "POST /api/users": {
    "description": "posts a new user",
    "requiredData": {
      "username": "string",
      "password": "string",
      "profile_pic_url": "string"
    }
  },
  "GET /api/genres": {
    "description": "returns an object with the available genres",
    "exampleResponse": {
      "genres": [
        {
          "genre_id": "number",
          "genre_name": "string",
          "description": "string"
        },
        {
          "genre_id": "number",
          "genre_name": "string",
          "description": "string"
        }
      ]
    }
  },
  "POST /api/genres": {
    "description": "posts a new genre",
    "requiredData": {
      "genre_name": "string",
      "description": "string"
    }
  },
  "GET /api/reviews": {
    "description": "returns an object with all available reviews",
    "exampleResponse": {
      "reviews": [
        {
          "review_id": "number",
          "created_at": "Date",
          "review_title": "string",
          "review_image_url": "string",
          "likes": "number",
          "dislikes": "number",
          "commentCount": "number",
          "author": "string",
          "genre": "string"
        }
      ]
    }
  },
  "POST /api/reviews": {
    "description": "posts a new review",
    "requiredData": {
      "review_title": "string",
      "body": "string",
      "review_image_url": "string",
      "author_id": "number",
      "genre_id": "number",
      "likes": "number",
      "dislikes": "number"
    }
  },
  "GET /api/reviews/:review_id": {
    "description": "returns the review with that id",
    "exampleResponse": {
      "review": {
        "review_id": "number",
        "created_at": "Date",
        "review_title": "string",
        "body": "string",
        "review_image_url": "string",
        "likes": "number",
        "dislikes": "number",
        "author": "string",
        "genre": "string",
        "commentCount": "number"
      }
    }
  },
  "GET /api/reviews/:review_id/comments": {
    "description": "returns all the availabe comments from that reviews",
    "exampleResponse": {
      "comments": [
        {
          "review_id": "number",
          "body": "string",
          "created_at": "Date",
          "author": "string"
        },
        {
          "review_id": "number",
          "body": "string",
          "created_at": "Date",
          "author": "string"
        },
        {
          "review_id": "number",
          "body": "string",
          "created_at": "Date",
          "author": "string"
        }
      ]
    }
  },
  "POST /api/reviews/:review_id/comments": {
    "description": "posts a new comment",
    "requiredData": {
      "author_id": "number",
      "body": "string",
      "review_id": "number"
    }
  },
  "GET /api/likes/:user_id": {
    "description": "returns all the likes and dislikes by that user",
    "exampleResponse": {
      "likes": [
        { "user_id": 1, "review_id": 1, "value": 1 },
        { "user_id": 1, "review_id": 2, "value": -1 }
      ]
    }
  },
  "POST /api/likes/:user_id": {
    "description": "posts a new like object for a specific review by the user",
    "requiredData": {
      "user_id": "number",
      "review_id": "number",
      "value": "number (1 | -1)"
    }
  }
}
